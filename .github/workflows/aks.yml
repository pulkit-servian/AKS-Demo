# Name of the github action
name: 'Terraform Provisioning' 

#The trigger for this workflow to be invoked
#This workflow will get invoked once a push on the repository is sensed for the file changes under the terraform/aks directory
on:                            
  push:                        
    branches:
    - main
    paths:
    - 'AKS/*.tf'
# This is the job that tells github action runner to provision a container with specified OS, takes in the service principal(SP)secrets from github secrets for authenticating to Azure       
jobs:                          
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_AD_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
    # Check to formatting of written terraform code in the repository under the specified path
    # Reference - https://www.terraform.io/docs/cli/commands/fmt.html
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.15.0
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: "AKS/"
    # Initialize the terraform to download the required provisioners and dependencies - ie Azure and Kubernetes in this case
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.15.0
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "AKS/"
    # Verify whether a terraform configuration is syntactically valid and internally consistent
    # Reference - https://www.terraform.io/docs/cli/commands/validate.html
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.15.0
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "AKS/"
    # Terraform plan to see what infrastructure needs to provisioned/de-provisioned. Kind of a dry run    
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.15.0
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "AKS/"
    # Actual implementation of the above infrastructure plan.
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.15.0
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "AKS/"
